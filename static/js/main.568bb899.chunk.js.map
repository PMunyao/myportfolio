{"version":3,"sources":["components/Displaycard.js","utils/fetchcard.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","DisplayCard","props","_useState","useState","_useState2","slicedToArray","data","setData","useEffect","fetch","_ref","asyncToGenerator","_callee","response","_context","json","apply","arguments","react_default","a","createElement","Container","className","src","alt","image","title","description","styled","div","_templateObject","taggedTemplateLiteral","num","Fetch","_Component","inherits","_super","_createSuper","_this","classCallCheck","handleDeviceMotion","e","setState","rotationRate","alpha","beta","gamma","createClass","window","addEventListener","removeEventListener","Math","sign","console","log","Component","rootElement","document","getElementById","ReactDOM","render","fetchcard_Fetch","App","src_createSuper","src_App"],"mappings":"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","file":"static/js/main.568bb899.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function DisplayCard(props) {\r\n  const [data, setData] = useState(0);\r\n  //let store = null;\r\n  useEffect(() => {\r\n    fetch();\r\n  });\r\n\r\n  const fetch = async () => {\r\n    let response = await fetch(\"./../utils.data.json\").json();\r\n    setData(response);\r\n  };\r\n\r\n  if (!data.length)\r\n    return (\r\n      <Container className=\"conti\">\r\n        <div className=\"outer-box\">\r\n          <div className=\"inner-box\">\r\n            <img className=\"pic\" src=\"\" alt={data[props].image} />\r\n            <h2 className=\"title\">{data[props].title}</h2>\r\n            <p className=\"description\">{data[props].description}</p>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: ${(props) => (props.num === 1 ? `green` : `orange`)};\r\n  gap: 5rem;\r\n  .outer-box {\r\n    height: 100%;\r\n    width: 100%;\r\n    background: linear-gradient(translucent, rgba(0, 0, 1, 0.5));\r\n    background-color: ${(props) => (props.num === 1 ? `green` : `orange`)};\r\n    .inner-box {\r\n      height: 100%;\r\n      width: 100%;\r\n      background: linear-gradient(translucent, rgba(0, 0, 1, 0.5));\r\n      background-color: ${(props) => (props.num === 1 ? `green` : `orange`)};\r\n      .pic {\r\n        height: 100vh;\r\n      }\r\n      .title {\r\n        font-family: sans-serif;\r\n      }\r\n      .description {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","// import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport Displaycard from \"../components/Displaycard\";\n// import { ReactAccelerometerMotion, AwesomeComponent } from \"./components/Shimmer\"\n\nclass Fetch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rotationRate: {\n        alpha: null,\n        beta: null,\n        gamma: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"devicemotion\", this.handleDeviceMotion);\n  }\n\n  handleDeviceMotion = (e) => {\n    this.setState({\n      rotationRate: e.rotationRate\n    });\n  };\n\n  render() {\n    const { rotationRate } = this.state;\n    /*\n    const wrapper = {\n      margin: \"0 auto\",\n      width: \"100%\"\n    };\n    const colorStyle = {\n      border: \"1px solid rgba(0,0,0,0.1)\",\n      borderRadius: \"8px\",\n      background:\n        \"#222 linear-gradient(90deg, rgba(255, 0, 0, 0), #222 20% 80%, rgba(255, 0, 0, \" +\n        Math.round(rotationRate.gamma) +\n        \"))\",\n      color: \"white\",\n      display: \"block\",\n      fontSize: \"18px\",\n      fontWeight: \"600\",\n      textAlign: \"center\",\n      lineHeight: \"56px\",\n      height: \"56px\",\n      margin: \"24px\",\n      maxWidth: \"375px\"\n    };\n    */\n\n    let num = 0;\n\n    if (\n      (Math.sign(rotationRate.alpha) && Math.sign(rotationRate.gamma)) === 1\n    ) {\n      num = 0;\n    } else if (\n      (Math.sign(rotationRate.alpha) && Math.sign(rotationRate.gamma)) === -1\n    ) {\n      num = 1;\n    }\n    console.log(rotationRate.alpha);\n    console.log(rotationRate.gamma);\n    return (\n      <div className=\"border\">\n        <Displaycard props={num} />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Fetch />, rootElement);\n","// import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport Displaycard from \"./components/Displaycard\";\nimport Fetch from \"./utils/fetchcard\";\n// import { ReactAccelerometerMotion, AwesomeComponent } from \"./components/Shimmer\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rotationRate: {\n        alpha: null,\n        beta: null,\n        gamma: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"devicemotion\", this.handleDeviceMotion);\n  }\n\n  handleDeviceMotion = (e) => {\n    this.setState({\n      rotationRate: e.rotationRate\n    });\n  };\n\n  render() {\n    const { rotationRate } = this.state;\n    /*\n    const wrapper = {\n      margin: \"0 auto\",\n      width: \"100%\"\n    };\n    const colorStyle = {\n      border: \"1px solid rgba(0,0,0,0.1)\",\n      borderRadius: \"8px\",\n      background:\n        \"#222 linear-gradient(90deg, rgba(255, 0, 0, 0), #222 20% 80%, rgba(255, 0, 0, \" +\n        Math.round(rotationRate.gamma) +\n        \"))\",\n      color: \"white\",\n      display: \"block\",\n      fontSize: \"18px\",\n      fontWeight: \"600\",\n      textAlign: \"center\",\n      lineHeight: \"56px\",\n      height: \"56px\",\n      margin: \"24px\",\n      maxWidth: \"375px\"\n    };\n    */\n\n    let num = 0;\n\n    if (\n      (Math.sign(rotationRate.alpha) && Math.sign(rotationRate.gamma)) === 1\n    ) {\n      num = 0;\n    } else if (\n      (Math.sign(rotationRate.alpha) && Math.sign(rotationRate.gamma)) === -1\n    ) {\n      num = 1;\n    }\n    console.log(rotationRate.alpha);\n    console.log(rotationRate.gamma);\n    return (\n      <div className=\"border\">\n        <Displaycard props={num} />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}